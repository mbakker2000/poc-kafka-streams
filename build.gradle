buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
        asciidoctorPluginVersion = '1.5.3'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath ("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath ("org.asciidoctor:asciidoctor-gradle-plugin:${asciidoctorPluginVersion}")
        classpath 'com.github.jruby-gradle:jruby-gradle-plugin:0.1.5'
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.11'
    id 'java'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'maven-publish'
apply plugin: org.asciidoctor.gradle.AsciidoctorPlugin
apply plugin: 'com.github.jruby-gradle.base'

description = """nawgegevens backend app"""

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
sourceCompatibility = 1.8

springBoot {
    executable = true
}
//dit is de output locatie van Asciidoctorâ€™s generated snippets

ext {
    restAssuredVersion = '3.0.1'
    snippetsDir = file('build/generated-snippets')
}


repositories {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

// Do not inline this variable. asciidoctor uses it inside

ext['spring-restdocs.version'] = '2.0.0.RELEASE'

dependencies {
    gems 'rubygems:asciidoctor-diagram:1.2.0'

    compile('ch.qos.logback:logback-classic:1.2.1')
    compileOnly('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-web-services")
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.cloud:spring-cloud-starter-hystrix')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.boot:spring-boot-configuration-processor')
    compile("com.h2database:h2")
    compile("org.apache.kafka:kafka-streams:1.0.0")
    compile("org.apache.kafka:kafka-clients:1.0.0")
    compile 'io.jsonwebtoken:jjwt:0.9.0'
    compile 'org.springframework.kafka:spring-kafka'
    compile 'org.apache.avro:avro:1.8.2'
    compile 'com.twitter:bijection-avro_2.10:0.9.2'

    compile('org.springframework.restdocs:spring-restdocs-restassured:2.0.0.RELEASE')
    compile('org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.0.RELEASE')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework:spring-test')
    testCompile 'org.mockito:mockito-core'
    testCompile 'org.assertj:assertj-core'
    testCompile 'com.jayway.awaitility:awaitility:1.3.4'
    testCompile 'com.jayway.restassured:rest-assured:2.3.0'

    asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:${project.'spring-restdocs.version'}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE"
    }
}

test {
}

asciidoctor {
    // jrubyPrepareGems task is added by the JRuby
    // plugin and will download Ruby gems we have
    // defined in the gems dependency configuration.
    dependsOn jrubyPrepareGems
    outputs.dir snippetsDir

    // Asciidoctor task needs the
    // asciidoctor-diagram gem, we installed
    // with the jrubyPrepareGems task and
    // gems dependency configuration.
    requires = ['asciidoctor-diagram']

    // Set path to find gems to directory
    // used by jrubyPrepareGems task.
    gemPath = jrubyPrepareGems.outputDir
}

asciidoctor.doLast {
    copy {
        from 'src/docs/asciidoc'
        into "build/asciidoc/html5"
        include '*.png'
    }
}

jar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE"

    }

}